select r.RESTAURANT_NAME, rb.ADDRESS, i.ITEM_NAME, bm.PRICE, bm.OFFER, GET_BRANCHES_AVGRATING(r.RESTAURANT_NAME, l.LOCATION_NAME) "BR AVG RATING"
from BRANCH_MENUS bm join RESTAURANTS r using (REST_ID)
join LOCATIONS l using (LOCATION_ID)
join MENU_ITEMS i using (ITEM_ID)
join RESTAURANTS_BRANCHES rb using (REST_ID , LOCATION_ID)
where l.LOCATION_NAME = 'DHANMONDI' AND i.ITEM_TYPE = 'BURGER' and (bm.PRICE BETWEEN 200 and 250);

select r.RESTAURANT_NAME, rb.ADDRESS, i.ITEM_NAME, bm.PRICE, bm.OFFER, GET_BRANCHES_AVGRATING(r.RESTAURANT_NAME, l.LOCATION_NAME) "BR AVG RATING", GET_BRANCHMENU_AVGRATING(r.RESTAURANT_NAME, l.LOCATION_NAME, i.ITEM_ID) "MENU AVG RATING"
from BRANCH_MENUS bm join RESTAURANTS r on (bm.REST_ID = r.REST_ID)
join LOCATIONS l on (l.LOCATION_ID = bm.LOCATION_ID)
join MENU_ITEMS i on (i.ITEM_ID = bm.ITEM_ID)
join RESTAURANTS_BRANCHES rb on (bm.REST_ID = rb.REST_ID and bm.LOCATION_ID = rb.LOCATION_ID)
where l.LOCATION_NAME = 'DHANMONDI' AND i.ITEM_TYPE = 'BURGER' and (bm.PRICE BETWEEN 200 and 250);



INSERT into USERS_ADMIN_ALLOCATION
SELECT U.USER_ID, A.ADMIN_ID
FROM USERS U, ADMINS A;

SELECT r.RESTAURANT_NAME, round(avg(ub.USER_BRANCH_RATING))
from RESTAURANTS r join USERS_BRANCH_RATING ub using(REST_ID)
GROUP BY REST_ID, RESTAURANT_NAME;

SELECT r.RESTAURANT_NAME, i.ITEM_TYPE, i.ITEM_NAME, ROUND(avg(um.USER_MENU_RATING))
from RESTAURANTS r join USERS_MENU_RATING um using(REST_ID)
join MENU_ITEMS i using(ITEM_ID)
WHERE r.RESTAURANT_NAME like upper('%takeout%') and ITEM_TYPE like UPPER('%burger%')
GROUP BY REST_ID, RESTAURANT_NAME, i.ITEM_TYPE, i.ITEM_NAME;

INSERT into BRANCH_MENUS(REST_ID, LOCATION_ID, ITEM_ID, PRICE)
SELECT r.REST_ID, r.LOCATION_ID, i.ITEM_ID, 150 + mod(r.REST_ID*100 + r.LOCATION_ID*50 + i.ITEM_ID*10, 300)
FROM RESTAURANTS_BRANCHES r, MENU_ITEMS i;

INSERT into USERS_BRANCH_RATING(REST_ID, LOCATION_ID, USER_ID, USER_BRANCH_RATING)
SELECT r.REST_ID, l.LOCATION_ID, u.USER_ID, 5 + mod(r.REST_ID + l.LOCATION_ID + u.USER_ID, 6)
FROM RESTAURANTS r, LOCATIONS l, users u;

INSERT into USERS_BRANCH_RATING(REST_ID, LOCATION_ID, USER_ID, USER_BRANCH_RATING)
SELECT r.REST_ID, r.LOCATION_ID, u.USER_ID, 5 + mod(r.REST_ID + r.LOCATION_ID + u.USER_ID, 6)
FROM RESTAURANTS_BRANCHES r, users u;


INSERT into USERS_MENU_RATING(REST_ID, LOCATION_ID, ITEM_ID, USER_ID, USER_MENU_RATING)
SELECT r.REST_ID, l.LOCATION_ID, i.ITEM_ID, u.USER_ID, 5 + mod(r.REST_ID + i.ITEM_ID + l.LOCATION_ID + u.USER_ID, 6)
FROM RESTAURANTS r, LOCATIONS l, MENU_ITEMS i, USERS u;

INSERT into USERS_MENU_RATING(REST_ID, LOCATION_ID, ITEM_ID, USER_ID, USER_MENU_RATING)
SELECT br.REST_ID, br.LOCATION_ID, br.ITEM_ID, u.USER_ID, 5 + mod(br.REST_ID + br.ITEM_ID + br.LOCATION_ID + u.USER_ID, 6)
FROM BRANCH_MENUS br, USERS u;


SELECT RESTAURANT_NAME, LOCATION_NAME, ADDRESS, OPEN_TIME, CLOSE_TIME FROM RESTAURANTS_BRANCHES
JOIN RESTAURANTS USING(REST_ID)
JOIN LOCATIONS USING(LOCATION_ID)
WHERE WEEKLY_HOLIDAY NOT LIKE 'SATURDAY';

INSERT into BRANCHES_ADMIN_ALLOCATION
SELECT BR.REST_ID, BR.LOCATION_ID, A.ADMIN_ID
FROM RESTAURANTS_BRANCHES BR, ADMINS A;

SELECT R.RESTAURANT_NAME, L.LOCATION_NAME, A.COMMITTEE_NAME
FROM RESTAURANTS_AUTHORITY RA JOIN RESTAURANTS R ON(RA.REST_ID = R.REST_ID)
JOIN LOCATIONS L ON(RA.LOCATION_ID = L.LOCATION_ID)
JOIN AUTHORITIES A ON(A.AUTH_ID = RA.AUTH_ID);

SELECT * FROM RESTAURANTS_BRANCHES
WHERE TO_DATE(OPEN_TIME, 'HH:MI AM') >= TO_DATE('08:00 AM','HH:MI AM') 
ORDER BY OPEN_TIME;





