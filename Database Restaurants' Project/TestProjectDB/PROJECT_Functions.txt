CREATE OR REPLACE FUNCTION GET_BRANCHES_AVGRATING(RNAME IN VARCHAR2, LNAME IN VARCHAR2)
RETURN NUMBER IS
AVGRATING NUMBER ;
BEGIN
SELECT ROUND(avg(ub.USER_BRANCH_RATING),1) INTO AVGRATING
from USERS_BRANCH_RATING ub join RESTAURANTS r on (r.REST_ID = ub.REST_ID)
join LOCATIONS l on(l.LOCATION_ID = ub.LOCATION_ID)
WHERE r.RESTAURANT_NAME = RNAME AND l.LOCATION_NAME = LNAME
GROUP BY ub.REST_ID, ub.LOCATION_ID;
RETURN AVGRATING ;
EXCEPTION
WHEN NO_DATA_FOUND THEN
RETURN 0 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;


CREATE OR REPLACE FUNCTION GET_BRANCHMENU_AVGRATING(RNAME IN VARCHAR2, LNAME IN VARCHAR2, IDITEM IN NUMBER)
RETURN NUMBER IS
AVGRATING NUMBER;
BEGIN
SELECT ROUND(avg(um.USER_MENU_RATING),1) INTO AVGRATING
from USERS_MENU_RATING um join RESTAURANTS r on (r.REST_ID = um.REST_ID)
join LOCATIONS l on(l.LOCATION_ID = um.LOCATION_ID)
join MENU_ITEMS i on(i.ITEM_ID = um.ITEM_ID)
WHERE r.RESTAURANT_NAME = RNAME AND l.LOCATION_NAME = LNAME and i.ITEM_ID = IDITEM
GROUP BY um.REST_ID, um.LOCATION_ID, um.ITEM_ID;
RETURN AVGRATING ;
EXCEPTION
WHEN NO_DATA_FOUND THEN
RETURN 0 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;



CREATE OR REPLACE FUNCTION SET_BRANCHMENU_RATING(RNAME IN VARCHAR2, LNAME IN VARCHAR2, ITYPE IN VARCHAR2, INAME IN VARCHAR2, UNAME IN VARCHAR2, RAT IN NUMBER, COM IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
ITID NUMBER;
USID NUMBER;

BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
SELECT USER_ID INTO USID FROM USERS WHERE USERNAME = UNAME;
SELECT ITEM_ID INTO ITID FROM MENU_ITEMS WHERE ITEM_TYPE = ITYPE AND ITEM_NAME = INAME;

INSERT INTO USERS_MENU_RATING
VALUES(RID, LID, ITID, USID, RAT, COM);


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;

CREATE OR REPLACE FUNCTION SET_BRANCH_RATING(RNAME IN VARCHAR2, LNAME IN VARCHAR2, UNAME IN VARCHAR2, RAT IN NUMBER, COM IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
USID NUMBER;

BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
-- DBMS_OUTPUT.PUT_LINE(RID);SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
-- DBMS_OUTPUT.PUT_LINE(LID);
SELECT USER_ID INTO USID FROM USERS WHERE USERNAME = UNAME;
-- DBMS_OUTPUT.PUT_LINE(USID);
-- DBMS_OUTPUT.PUT_LINE(RAT);
-- DBMS_OUTPUT.PUT_LINE(COM);


INSERT INTO USERS_BRANCH_RATING
VALUES(RID, LID, USID, RAT, COM);

COMMIT;
RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;


CREATE OR REPLACE FUNCTION SET_BRANCH_MENU(RNAME IN VARCHAR2, LNAME IN VARCHAR2, ITYPE IN VARCHAR2, INAME IN VARCHAR2, P IN NUMBER, AV IN VARCHAR2, OFF IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
ITID NUMBER;


BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
SELECT ITEM_ID INTO ITID FROM MENU_ITEMS WHERE ITEM_TYPE = ITYPE AND ITEM_NAME = INAME;

INSERT INTO BRANCH_MENUS
VALUES(RID, LID, ITID, P, AV, OFF);


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;

CREATE OR REPLACE FUNCTION SET_REST_BRANCHES(RNAME IN VARCHAR2, LNAME IN VARCHAR2, MN IN VARCHAR2, AD IN VARCHAR2, CN IN VARCHAR2, OT IN VARCHAR2, CT IN VARCHAR2, WH IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;


BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;

INSERT INTO RESTAURANTS_BRANCHES
VALUES(RID, LID, MN, AD, CN, OT, CT, WH);


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;

CREATE OR REPLACE FUNCTION SET_REST_AUTH(RNAME IN VARCHAR2, LNAME IN VARCHAR2, AUNAME IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
AUID NUMBER;


BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
SELECT AUTH_ID INTO AUID FROM AUTHORITIES WHERE AUTH_USER_NAME = AUNAME;

INSERT INTO RESTAURANTS_AUTHORITY
VALUES(RID, LID, AUID);


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;


CREATE OR REPLACE FUNCTION SET_BRANCH_MENU_OFFER(RNAME IN VARCHAR2, LNAME IN VARCHAR2, ITYPE IN VARCHAR2, INAME IN VARCHAR2, OFF IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
ITID NUMBER;


BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
SELECT ITEM_ID INTO ITID FROM MENU_ITEMS WHERE ITEM_TYPE = ITYPE AND ITEM_NAME = INAME;

UPDATE BRANCH_MENUS
SET OFFER = OFF
WHERE REST_ID = RID AND LOCATION_ID = LID AND ITEM_ID = ITID;


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;



CREATE OR REPLACE
FUNCTION DELETE_BRANCH_MENU(RNAME IN VARCHAR2, LNAME IN VARCHAR2, ITYPE IN VARCHAR2, INAME IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
ITID NUMBER;


BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;
SELECT ITEM_ID INTO ITID FROM MENU_ITEMS WHERE ITEM_TYPE = ITYPE AND ITEM_NAME = INAME;

DELETE FROM BRANCH_MENUS
WHERE REST_ID = RID AND LOCATION_ID = LID AND ITEM_ID = ITID;

commit;


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;

CREATE OR REPLACE
FUNCTION SET_BRANCHES_AUTH(RNAME IN VARCHAR2, LNAME IN VARCHAR2, AUN IN VARCHAR2, AUEMAIL IN VARCHAR2, COMN IN VARCHAR2, PASS IN VARCHAR2)
RETURN NUMBER IS
RID NUMBER;
LID NUMBER;
AUID NUMBER;
BCOUNT NUMBER;

BEGIN

SELECT REST_ID INTO RID FROM RESTAURANTS WHERE RESTAURANT_NAME = RNAME;
SELECT LOCATION_ID INTO LID FROM LOCATIONS WHERE LOCATION_NAME = LNAME;

INSERT INTO AUTHORITIES
VALUES(auth_id_seq.nextval, AUN, AUEMAIL, COMN, PASS);

SELECT AUTH_ID INTO AUID FROM AUTHORITIES WHERE AUTH_USER_NAME = AUN;

SELECT Count(*) INTO BCOUNT FROM RESTAURANTS_AUTHORITY WHERE REST_ID = RID AND LOCATION_ID = LID;

IF BCOUNT < 1 THEN
INSERT INTO RESTAURANTS_AUTHORITY
VALUES(RID, LID, AUID);
ELSE
UPDATE RESTAURANTS_AUTHORITY
SET AUTH_ID = AUID
WHERE REST_ID = RID AND LOCATION_ID = LID;
END IF;

COMMIT;


RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;

CREATE OR REPLACE
FUNCTION APPROVE_MENUTYPE_REQ(ITYPE IN VARCHAR2)
RETURN NUMBER IS

ICOUNT NUMBER;


BEGIN

SELECT Count(*) INTO ICOUNT FROM MENU_TYPES WHERE ITEM_TYPE = upper(ITYPE);

IF ICOUNT < 1 THEN
INSERT INTO MENU_TYPES
VALUES(type_id_seq.nextval, ITYPE);
END IF;

delete from REQUEST_MENU_TYPES
WHERE REQ_ITEM_TYPE = ITYPE;

RETURN 1 ;
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
RETURN -1 ;
WHEN OTHERS THEN
RETURN 0 ;
END ;



